import streamlit as st
import boto3
import torch
import ember
import json
import numpy as np

np.int = np.int64

def preprocess_PE_file(file_path, input_length):
    
    # test_file = open(file_path, 'r', errors="ignore").read() # read PE file
    extract_PE = ember.PEFeatureExtractor() # initialize extractor
    input_PE = extract_PE.feature_vector(file_path) # read feature vector
    input_tensor = torch.tensor(input_PE)
    byte_seq = input_tensor.byte() # get byte sequence
    input_data = byte_seq.reshape(1, 2381) 
    print("preprocess")
    return input_data

# invoke SageMaker endpoint with file content
def invoke_sagemaker_endpoint(executable_content):

    try:
        sm_client = boto3.client('sagemaker-runtime', region_name='us-east-1',
                                 aws_access_key_id='', # add credentials
                          aws_secret_access_key='',
                          aws_session_token="")

        payload = {'inputs': preprocess_PE_file(executable_content, input_length = 2000000).cpu().numpy().tolist()}
        # payload = {'inputs': np.ones((1, 2381)).tolist()}
        # print("payload")
        payload = json.dumps(payload)

    #     Invoke SageMaker endpoint
        response = sm_client.invoke_endpoint(
            EndpointName='', # add endpoint name here
            ContentType='application/json',
            Body=json.dumps(payload)
        )

        # Check response status code
        if response['ResponseMetadata']['HTTPStatusCode'] == 200:
            output = response['Body']
            return output
        else:
            st.error(f"Failed to invoke SageMaker endpoint. Status code: {response['ResponseMetadata']['HTTPStatusCode']}")
            return None
    
    except Exception as e:
        st.error(f"An error occurred while invoking SageMaker endpoint: {str(e)}")


def main():
    st.title('SageMaker Endpoint Invoker')

    st.write("Upload your executable file")
    file = st.file_uploader("Upload file", type=["exe"])

    if file is not None:
        file_contents = file.getvalue() # read PE file as raw bytes


        # Button to invoke SageMaker endpoint
        if st.button("Invoke SageMaker Endpoint"):
            output = invoke_sagemaker_endpoint(file_contents)
            op = output.read().decode() # read streamingbody object
            print(op)
            if output:
                st.write("### Output:")
                st.write(op)
                
            else:
                st.error("Failed to get output from SageMaker endpoint.")


if __name__ == "__main__":
    main()
